#!/bin/bash
# Run as root
domain=$1
php_version=$2
template=$3
option=$4 # option = min ?

ip_address=`ifconfig | grep -Eo "inet 192\.168\.[0-9]+\.[0-9]+" | sed "s/.* //g"`
domain_part_name=`echo "$domain" | cut -d "." -f 1`

RED="$(tput setaf 1)"
GREEN="$(tput setaf 2)"
NC="$(tput sgr0)"  # No Color

if [ -z "$php_version" ]; then
	php_version=`php --version | head -n 1 | cut -d " " -f 2 | cut -d "." -f 1,2`
	if [ -z "$php_version" ]; then
		echo "${RED}ERROR${NC}: Cannot find any PHP to use"
		exit 1
	fi
fi

if [ "$1" == "--help" ]; then
	echo "Usage: domain-add <domain name> [<PHP version ($php_version)> <template> <option (min)>]"
	exit
fi

if [ -z "$domain" ]; then
	echo "Usage: domain-add <domain name> [<PHP version ($php_version)> <template> <option (min)>]"
	echo "Domain name required."
	exit
fi

if [ -d "/etc/bind" ]; then
	if [ -f "/etc/bind/db.$domain" ]; then
		echo "${GREEN}INFO${NC}: Domain already exists in /etc/bind/. Fixing..."
	fi

	# ----------------------------------------------- Bind9 DNS zone
    bind_template="db.template.internal"
	filepath=/etc/bind/db.$domain
	if [ -n "$template" ] && [ ! "$template" == "DEFAULT" ]; then
        bind_template="db.$template"
        echo "${GREEN}INFO${NC}: Using template $bind_template for Bind9"
	fi

	# .internal domain
	echo "Copying template /etc/bind/$bind_template to $filepath"
	sudo cp /etc/bind/$bind_template $filepath

	echo "Setting IP to $ip_address"
	sudo sed -i -E "s/\$IP_ADDRESS/$ip_address/g" $filepath

	echo "Setting domain to $domain"
	sudo sed -i -E "s/\$DOMAIN_NAME/$domain/g" $filepath

	# DDNS domain
	domain_ddns="$domain_part_name.ddns.net"
	filepath_ddns=/etc/bind/db.$domain_ddns
	echo "Copying template /etc/bind/$bind_template to $filepath_ddns for DDNS"
	sudo cp /etc/bind/$bind_template $filepath_ddns

	echo "Setting IP to $ip_address for DDNS"
	sudo sed -i -E "s/\$IP_ADDRESS/$ip_address/g" $filepath_ddns

	echo "Setting domain to $domain_ddns for DDNS"
	sudo sed -i -E "s/\$DOMAIN_NAME/$domain_ddns/g" $filepath_ddns

	# Pointers
	pointer=`grep "$domain" /etc/bind/named.conf.local`
	if [ -z "$pointer" ]; then
		echo "Adding pointer in /etc/bind/named.conf.local"
		echo "zone \"$domain\" {type master; file \"$filepath\"; };" | sudo tee -a /etc/bind/named.conf.local > /dev/null
		echo "zone \"$domain_ddns\" {type master; file \"$filepath_ddns\"; };" | sudo tee -a /etc/bind/named.conf.local > /dev/null
	else
		echo "${GREEN}INFO${NC}: Pointer already found in /etc/bind/named.conf.local"
	fi

	echo "Restarting named service"
	sudo service named restart

	echo "Testing setup..."
	named-checkconf
	ip_dns=`nslookup $domain localhost | grep -E "Address: .*" | sed "s/.* //g"`
	if [ "$ip_dns" == "$ip_address" ]; then
		echo "Success"
	else
		if [ -z "$ip_dns" ]; then
			echo "${RED}Error${NC}: Local DNS lookup returned nothing. Should have returned $ip_address"
		else
			echo "${RED}Error${NC}: Local DNS lookup returned $ip_dns. Should have returned $ip_address"
		fi
	fi
else
	echo "${RED}ERROR${NC}: Bind9 DNS not installed because no /etc/bind/ directory. Skipping setup."
fi

local_host=`grep "$domain" /etc/hosts`
if [ -z "$local_host" ]; then
	echo "Adding a /etc/hosts file entry as well for direct usage"
	echo "127.0.0.1 $domain" | sudo tee -a /etc/hosts > /dev/null
	echo "127.0.0.1 $domain_ddns" | sudo tee -a /etc/hosts > /dev/null
else
	echo "${GREEN}INFO${NC}: Host already entered in /etc/hosts"
fi

# ------------------------------------------- Apache setup
if [ -d "/var/www" ]; then
	document_root="/var/www/$domain"
	if [ -d "$document_root" ]; then
		echo "Directory $document_root already exists"
	else
		sudo mkdir $document_root
	fi
    site_template="template.internal.conf"
	if [ -n "$template" ] && [ ! "$template" == "DEFAULT" ]; then
        site_template="$template.conf"
        echo "${GREEN}INFO${NC}: Using template $site_template for Apache site"
	elif [ "$option" = "min" ]; then 
        site_template="nofpm.template.internal.conf"; 
        echo "${GREEN}INFO${NC}: Using template $site_template for Apache NOFPM site"
    fi
	site_available=/etc/apache2/sites-available/$domain.conf
	site_enabled=/etc/apache2/sites-enabled/$domain.conf
	sudo cp /etc/apache2/sites-available/$site_template $site_available  # Includes ddns.net ServerAlias
	sudo sed -i "s/\$DOMAIN_NAME/$domain/g" $site_available
	sudo sed -i "s/\$DOMAIN_PART_NAME/$domain_part_name/g" $site_available
	sudo sed -i "s/\$PHP_VERSION/$php_version/g" $site_available
	if [ -f "$site_enabled" ]; then
		echo "Site already enabled in Apache"
	else
		echo "Enabling site $domain in Apache"
		sudo a2ensite $domain
		# sudo ln -s $site_available /etc/apache2/sites-enabled/
	fi
	sudo systemctl restart apache2
else
	echo "${RED}ERROR${NC}: Apache2 web-server not installed because no /var/www/ directory. Skipping setup."
fi

# ------------------------------------------- MySQL setup
mysql_command=`which mysql`
sudo service mysql restart  # In case it is not running
if [ -n "$mysql_command" ]; then
	stem=`echo $domain | sed -E 's/\..*//g'`
	password="QueenPool1"
	echo "Note that root must have unqualified access, i.e. without password"
	echo "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';"
	databases=`sudo mysql -e "show databases" | grep $stem`
	if [ -z "$databases" ]; then
			echo "Creating database $stem"
		sudo mysql -e "create database if not exists $stem"
	else
		echo "Database $stem already exists"
	fi
	users=`sudo mysql -e "select user from mysql.user" | grep "$stem"`
	if [ -z "$users" ]; then
		echo "Creating user $stem with password $password"
		sudo mysql -e "create user '$stem'@'localhost' IDENTIFIED BY '$password'"
	else
		echo "User $stem already exists"
	fi
	echo "Granting privileges"
	sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO '$stem'@'localhost';"
else
	echo "${RED}ERROR${NC}: MySQL database server not installed because no mysql command. Skipping setup."
fi

syntax_ok=`apachectl configtest 2>&1 | grep "Syntax OK"`
if [ -z "$syntax_ok" ]; then
	echo "${RED}ERROR${NC}: Apache2 configuration errors:"
	apachectl configtest
fi
